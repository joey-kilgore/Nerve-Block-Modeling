// Select options for saving data to files with a GUI 

// create the array to hold whether the checkboxes are selected
double valueToSaveSelected[9] // initialized to 0 (False)
strdef filePathMGate
strdef filePathHGate
strdef filePathVoltage
strdef filePathSGate
strdef filePathINa
strdef filePathIK
strdef filePathIL
strdef filePathMPGate
strdef filePathINaP

// Creating the file objects for each selection
objref fileMGate    // Checkbox 0
objref fileHGate    // Checkbox 1
objref fileVoltage  // Checkbox 2
objref fileSGate    // Checkbox 3
objref fileINa      // Checkbox 4
objref fileIK       // Checkbox 5
objref fileIL       // Checkbox 6
objref fileMPGate    // checkbox 7
objref fileINaP     // Checkbox 8

// Creating the VBox for all the components
objref saveValueToFileVBox
saveValueToFileVBox = new VBox()

// Procedure for drawing the actual GUI
proc DrawSaveFileVBox(){
    saveValueToFileVBox.intercept(1)
    xpanel("Save Data to File") //enter xpanel mode -- all following items go into this panel (w\n the vbox)
    xlabel("Check what values to save")
    xlabel("And input the file path to save it to")
    xlabel("You can enter the directory path, and then")
    xlabel("just enter the file name and extension when")
    xlabel("selecting your values.")
    xbutton("Enter File Directory", "enterFileDirectory()") // enter directory for files to simplify the process

    // each check box will launch a dialog box to input the file path
    xcheckbox("m gate", &valueToSaveSelected[0], "inputFilePath(0)")  // checkbox to save m gate values
    xcheckbox("h gate", &valueToSaveSelected[1], "inputFilePath(1)")  // checkbox to save h gate values
    xcheckbox("voltage", &valueToSaveSelected[2], "inputFilePath(2)")  // checkbox to save voltage values
    xcheckbox("s gate", &valueToSaveSelected[3], "inputFilePath(3)")  // checkbox to save voltage values
    xcheckbox("iNa", &valueToSaveSelected[4], "inputFilePath(4)")   // checkbox to save iNa
    xcheckbox("iK", &valueToSaveSelected[5], "inputFilePath(5)")   // checkbox to save iK
    xcheckbox("iL", &valueToSaveSelected[6], "inputFilePath(6)")   // checkbox to save iL
    xcheckbox("mp gate", &valueToSaveSelected[7], "inputFilePath(7)")   // checkbox to save n gate values
    xcheckbox("iNaP", &valueToSaveSelected[8], "inputFilePath(8)")   // checkbox to save iNaP

    xbutton("Commit Selection", "commitFileSelect()")   // commit selection actually creates the file objects  
    xbutton("Close Files", "closeFiles()")  // allows the user to close the file at any point to open it and view

    xpanel(100, 100)			//exit xpanel mode
    saveValueToFileVBox.intercept(0)
    saveValueToFileVBox.map("Save Data to File", 150, 30, -1, -1)
}

proc enterFileDirectory(){
    strdef direc    // direc will store the string the user enters as the file path
    string_dialog("Enter Directory Path, should end with a '/'", direc)

    sprint(filePathMGate, "%s%s", direc, "MGate.csv")
    sprint(filePathHGate, "%s%s", direc, "HGate.csv")
    sprint(filePathVoltage, "%s%s", direc, "Voltage.csv")
    sprint(filePathSGate, "%s%s", direc, "SGate.csv")
    sprint(filePathINa, "%s%s", direc, "INa.csv")
    sprint(filePathIK, "%s%s", direc, "IK.csv")
    sprint(filePathIL, "%s%s", direc, "IL.csv")
    sprint(filePathMPGate, "%s%s", direc, "MPGate.csv")
    sprint(filePathINaP, "%s%s", direc, "INaP.csv")

    // check all check boxes
    for i=0, 8 {
        valueToSaveSelected[i] = 1
    }

    // auto commit the selection because no more selections could be made
    commitFileSelect()
}

// Gets the file path when a user selected a value to save
proc inputFilePath(){
    selectedValue = $1
    if(selectedValue == 0) string_dialog("Enter path for m gate file: ", filePathMGate)
    
    if(selectedValue == 1) string_dialog("Enter path for h gate file: ", filePathHGate)
    
    if(selectedValue == 2) string_dialog("Enter path for voltage file: ", filePathVoltage)
    
    if(selectedValue == 3) string_dialog("Enter path for s gate file: ", filePathSGate)
    
    if(selectedValue == 4) string_dialog("Enter path for iNa file: ", filePathINa)
    
    if(selectedValue == 5) string_dialog("Enter path for iK file: ", filePathIK)
    
    if(selectedValue == 6) string_dialog("Enter path for iL file: ", filePathIL)

    if(selectedValue == 7) string_dialog("Enter path for mp gate file: ", filePathMPGate)

    if(selectedValue == 8) string_dialog("Enter path for iNaP file: ", filePathINaP)
}


// Procedure for creating file objects
proc commitFileSelect(){
    // The m gate was selected
    if(valueToSaveSelected[0] == 1){
        // Create the fileMGate file object
        fileMGate = new File(filePathMGate)
        // Open the file (set to append)
        fileMGate.aopen()
    }

    // The h gate was selected
    if(valueToSaveSelected[1] == 1){
        // Create the fileHGate file object
        fileHGate = new File(filePathHGate)
        // Open the file (set to append)
        fileHGate.aopen()
    }

    // Voltage was selected
    if(valueToSaveSelected[2] == 1){
        // Create the fileVoltage file object
        fileVoltage = new File(filePathVoltage)
        // Open the file (set to append)
        fileVoltage.aopen()
    }

    // the s gate was selected
    if(valueToSaveSelected[3] == 1){
        // Create the fileSGate file object
        fileSGate = new File(filePathSGate)
        // Open the file (set to append)
        fileSGate.aopen()
    }

    // the iNa was selected
    if(valueToSaveSelected[4] == 1){
        // Create the fileINa file object
        fileINa = new File(filePathINa)
        // Open the file (set to append)
        fileINa.aopen()
    }

    // the iK was selected
    if(valueToSaveSelected[5] == 1){
        // Create the fileIK file object
        fileIK = new File(filePathIK)
        // Open the file (set to append)
        fileIK.aopen()
    }

    // the iL was selected
    if(valueToSaveSelected[6] == 1){
        // Create the fileIL file object
        fileIL = new File(filePathIL)
        // Open the file (set to append)
        fileIL.aopen()
    }

    // the n gate was selected
    if(valueToSaveSelected[7] == 1){
        // Create the fileIL file object
        fileMPGate = new File(filePathMPGate)
        // Open the file (set to append)
        fileMPGate.aopen()
    }

    // the iNaP was selected
    if(valueToSaveSelected[8] == 1){
        // Create the fileINaP file object
        fileINaP = new File(filePathINaP)
        // Open the file (set to append)
        fileINaP.aopen()
    }
}

proc closeFiles(){ 
    if(valueToSaveSelected[0] == 1) {
        fileMGate.close()   // The m gate was selected
        valueToSaveSelected[0] = 0
    }

    if(valueToSaveSelected[1] == 1) {
        fileHGate.close()  // The h gate was selected
        valueToSaveSelected[1] = 0
    }

    if(valueToSaveSelected[2] == 1) {
        fileVoltage.close() // Voltage was selected
        valueToSaveSelected[2] = 0
    }

    if(valueToSaveSelected[3] == 1) {
        fileSGate.close()   // the s gate was selected 
        valueToSaveSelected[3] = 0
    }

    if(valueToSaveSelected[4] == 1) {
        fileINa.close()   // the iNa was selected  
        valueToSaveSelected[4] = 0 
    }

    if(valueToSaveSelected[5] == 1) {
        fileIK.close()   // the iK was selected  
        valueToSaveSelected[5] = 0 
    }

    if(valueToSaveSelected[6] == 1) {
        fileIL.close()   // the iL was selected 
        valueToSaveSelected[6] = 0 
    }

    if(valueToSaveSelected[7] == 1) {
        fileMPGate.close()   // the iL was selected   
        valueToSaveSelected[7] = 0
    }

    if(valueToSaveSelected[8] == 1) {
        fileINaP.close()   // the iNaP was selected   
        valueToSaveSelected[8] = 0
    }
}

// MAIN
DrawSaveFileVBox()